package main

import (
	"fmt"

	"../lib"
)

// 包和文件
// go语言的包的作用支持模块化，封装，编译隔离，重用
// 包的文件存储在目录$GOPATH/src/xxx
// 每个包给他的声明提供独立的命名空间
// 控制变量在包外面的可见性，导出的标识符以大写字母开头
// 包代码需要写到GOPATH src

func main() {
	pc := lib.PopCount(10)
	pc3 := lib.PopCount3(10)
	fmt.Printf("pc1 %d\t pc3 %d", pc, pc3)
}

// 导入
// 每个包通过称为导入路径的唯一字符来标识 语言规范没有定义
// 按约定包名匹配导入路径的最后一段

// 包的初始化
// 先初始化包级别的变量 按声明顺序依次解析
// 多个.go文件组成，初始化按照编译器收到的文件顺序进行
// 按照程序中的导入顺序进行 main函数执行前所有包都初始化完毕

// 包的生命周期 不能被调用和引用
